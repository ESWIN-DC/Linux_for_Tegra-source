From 551b7b0e04469a854d102cf25d58e33fa60f73cd Mon Sep 17 00:00:00 2001
From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date: Mon, 21 Nov 2016 19:31:08 +0100
Subject: [PATCH 132/371] kernel/sched: move stack + kprobe clean up to
 __put_task_struct()
X-NVConfidentiality: public

There is no need to free the stack before the task struct. This also
comes handy on -RT because we can't free memory in preempt disabled
region.

Change-Id: Ia80f23e99613ff6ae732352c5cf64dbef19101a9
Cc: stable-rt@vger.kernel.org #for kprobe_flush_task()
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
---
 kernel/fork.c       | 10 ++++++++++
 kernel/sched/core.c |  9 ---------
 2 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/kernel/fork.c b/kernel/fork.c
index 1339415..4c15731 100644
--- a/kernel/fork.c
+++ b/kernel/fork.c
@@ -79,6 +79,7 @@
 #include <linux/sysctl.h>
 #include <linux/kcov.h>
 #include <linux/tegra_profiler.h>
+#include <linux/kprobes.h>
 #include <linux/cpufreq_times.h>
 
 #include <asm/pgtable.h>
@@ -395,6 +396,15 @@ void __put_task_struct(struct task_struct *tsk)
 	WARN_ON(atomic_read(&tsk->usage));
 	WARN_ON(tsk == current);
 
+	/*
+	 * Remove function-return probe instances associated with this
+	 * task and put them back on the free list.
+	 */
+	kprobe_flush_task(tsk);
+
+	/* Task is done with its stack. */
+	put_task_stack(tsk);
+
 	cgroup_free(tsk);
 	task_numa_free(tsk, true);
 	security_task_free(tsk);
diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 8f0ca60..a6217bf 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -2873,15 +2873,6 @@ static struct rq *finish_task_switch(struct task_struct *prev)
 		if (prev->sched_class->task_dead)
 			prev->sched_class->task_dead(prev);
 
-		/*
-		 * Remove function-return probe instances associated with this
-		 * task and put them back on the free list.
-		 */
-		kprobe_flush_task(prev);
-
-		/* Task is done with its stack. */
-		put_task_stack(prev);
-
 		put_task_struct(prev);
 	}
 
-- 
2.7.4

