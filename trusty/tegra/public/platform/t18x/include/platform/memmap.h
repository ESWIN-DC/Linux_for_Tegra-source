/*
 * Copyright (c) 2015-2018, NVIDIA CORPORATION. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files
 * (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
#ifndef __PLATFORM_TEGRA_MEMMAP_H
#define __PLATFORM_TEGRA_MEMMAP_H

#if defined(WITH_PLATFORM_PARTNER)
#include <partner/platform/memmap.h>
#endif /* defined(WITH_PLATFORM_PARTNER) */

#define TEGRA_ARM_INT_CPU_BASE		(TEGRA_ARM_PERIF_BASE + 0x2000)

#define TEGRA_ARM_PERIF_PBASE		0x03880000
#define TEGRA_ARM_PERIF_BASE		REGISTER_BANK_1_P2V(TEGRA_ARM_PERIF_PBASE)
#define TEGRA_ARM_PERIF_SIZE		SZ_8K

#define TEGRA_UARTA_PBASE		0x03100000
#define TEGRA_UARTA_BASE		REGISTER_BANK_0_P2V(TEGRA_UARTA_PBASE)
#define TEGRA_UARTA_SIZE		SZ_64

#define TEGRA_UARTB_PBASE		0x03110000
#define TEGRA_UARTB_BASE		REGISTER_BANK_0_P2V(TEGRA_UARTB_PBASE)
#define TEGRA_UARTB_SIZE		SZ_64

#define TEGRA_UARTC_PBASE		0x0C280000
#define TEGRA_UARTC_BASE		REGISTER_BANK_2_P2V(TEGRA_UARTC_PBASE)
#define TEGRA_UARTC_SIZE		SZ_256

#define TEGRA_UARTD_PBASE		0x03130000
#define TEGRA_UARTD_BASE		REGISTER_BANK_0_P2V(TEGRA_UARTD_PBASE)
#define TEGRA_UARTD_SIZE		SZ_256

#define TEGRA_UARTE_PBASE		0x03140000
#define TEGRA_UARTE_BASE		REGISTER_BANK_0_P2V(TEGRA_UARTE_PBASE)
#define TEGRA_UARTE_SIZE		SZ_256

#define TEGRA_TSCUS_PBASE		0x0C2E0000
#define TEGRA_TSCUS_BASE		REGISTER_BANK_3_P2V(TEGRA_TSCUS_PBASE)
#define TEGRA_TSCUS_SIZE		SZ_16

#define TEGRA_COMBUART_PBASE		0x0C198000
#define TEGRA_COMBUART_BASE		REGISTER_BANK_4_P2V(TEGRA_COMBUART_PBASE)
#define TEGRA_COMBUART_SIZE		SZ_16

/* 1MB register ranges we need to access */
#define REGISTER_BANK_0_PADDR		0x03100000
#define REGISTER_BANK_1_PADDR		0x03880000
#define REGISTER_BANK_2_PADDR		0x0C280000
#define REGISTER_BANK_3_PADDR		0x0C2E0000
#define REGISTER_BANK_4_PADDR		0x0C198000

#define REGISTER_VADDR_BASE		0xfffffffff1000000
#define REGISTER_BANK_0_VADDR		(REGISTER_VADDR_BASE + 0x00200000)
#define REGISTER_BANK_1_VADDR		(REGISTER_VADDR_BASE + 0x00400000)
#define REGISTER_BANK_2_VADDR		(REGISTER_VADDR_BASE + 0x00800000)
#define REGISTER_BANK_3_VADDR		(REGISTER_VADDR_BASE + 0x00A00000)
#define REGISTER_BANK_4_VADDR		(REGISTER_VADDR_BASE + 0x00C00000)

#define REGISTER_BANK_SIZE		0x00010000

#define REGISTER_BANK_0_P2V(paddr) \
	((paddr) - REGISTER_BANK_0_PADDR + REGISTER_BANK_0_VADDR)
#define REGISTER_BANK_1_P2V(paddr) \
	((paddr) - REGISTER_BANK_1_PADDR + REGISTER_BANK_1_VADDR)
#define REGISTER_BANK_2_P2V(paddr) \
	((paddr) - REGISTER_BANK_2_PADDR + REGISTER_BANK_2_VADDR)
#define REGISTER_BANK_3_P2V(paddr) \
	((paddr) - REGISTER_BANK_3_PADDR + REGISTER_BANK_3_VADDR)
#define REGISTER_BANK_4_P2V(paddr) \
	((paddr) - REGISTER_BANK_4_PADDR + REGISTER_BANK_4_VADDR)

#endif /*__PLATFORM_MEMMAP_H */
